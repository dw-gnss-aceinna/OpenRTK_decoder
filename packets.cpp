#include "packets.h"

uint8_t first_packetType_flag[USR_PACKET_SIZE];

// e1, e2, pS, sK
uint16_t usrPacketType[USR_PACKET_SIZE] = {
	0x6531, 0x6532, 0x7053, 0x734B 
};

const usrPacketStruct usrPacket[USR_PACKET_SIZE] = {
	{
		"e1",
		20,
		{
			{
				"uint32",
				"timeCntr",
				"msec"
			},
			{
				"double",
				"time",
				"s"
			},
			{
				"float",
				"roll",
				"rad"
			},
			{
				"float",
				"pitch",
				"rad"
			},
			{
				"float",
				"heading",
				"rad"
			},
			{
				"float",
				"xAccel",
				"g"
			},
			{
				"float",
				"yAccel",
				"g"
			},
			{
				"float",
				"zAccel",
				"g"
			},
			{
				"float",
				"xRate",
				"deg/s"
			},
			{
				"float",
				"yRate",
				"deg/s"
			},
			{
				"float",
				"zRate",
				"deg/s"
			},
			{
				"float",
				"xRateBias",
				"deg/s"
			},
			{
				"float",
				"yRateBias",
				"deg/s"
			},
			{
				"float",
				"zRateBias",
				"deg/s"
			},
			{
				"float",
				"xMag",
				"G"
			},
			{
				"float",
				"yMag",
				"G"
			},
			{
				"float",
				"zMag",
				"G"
			},
			{
				"uint8",
				"opMode",
				"unitless"
			},
			{
				"uint8",
				"linAccSw",
				"unitless"
			},
			{
				"uint8",
				"turnSw",
				"unitless"
			}
		}
	}, {
		"e2",
		29,
		{
			{
				"uint32",
				"timeCntr",
				"msec"
			},
			{
				"double",
				"time",
				"s"
			},
			{
				"float",
				"roll",
				"rad"
			},
			{
				"float",
				"pitch",
				"rad"
			},
			{
				"float",
				"heading",
				"rad"
			},
			{
				"float",
				"xAccel",
				"g"
			},
			{
				"float",
				"yAccel",
				"g"
			},
			{
				"float",
				"zAccel",
				"g"
			},
			{
				"float",
				"xAccelBias",
				"g"
			},
			{
				"float",
				"yAccelBias",
				"g"
			},
			{
				"float",
				"zAccelBias",
				"g"
			},
			{
				"float",
				"xRate",
				"deg/s"
			},
			{
				"float",
				"yRate",
				"deg/s"
			},
			{
				"float",
				"zRate",
				"deg/s"
			},
			{
				"float",
				"xRateBias",
				"deg/s"
			},
			{
				"float",
				"yRateBias",
				"deg/s"
			},
			{
				"float",
				"zRateBias",
				"deg/s"
			},
			{
				"float",
				"velNorth",
				"m/s"
			},
			{
				"float",
				"velEast",
				"m/s"
			},
			{
				"float",
				"velDown",
				"m/s"
			},
			{
				"float",
				"xMag",
				"G"
			},
			{
				"float",
				"yMag",
				"G"
			},
			{
				"float",
				"zMag",
				"G"
			},
			{
				"double",
				"lat",
				"deg"
			},
			{
				"double",
				"lon",
				"deg"
			},
			{
				"double",
				"alt",
				"m"
			},
			{
				"uint8",
				"opMode",
				"unitless"
			},
			{
				"uint8",
				"linAccSw",
				"unitless"
			},
			{
				"uint8",
				"turnSw",
				"unitless"
			}
		}
	}, {
		"pS",
		18,
		{
			{
				"uint32",
				"systemTime",
				"msec"
			},
			{
				"uint32",
				"positionMode",
				""
			},
			{
				"double",
				"timeOfWeek",
				"msec"
			},
			{
				"double",
				"latitude",
				"deg"
			},
			{
				"double",
				"longitude",
				"deg"
			},
			{
				"double",
				"ellipsoidalHeight",
				"m"
			},
			{
				"double",
				"mslHeight",
				"m"
			},
			{
				"double",
				"positionRMS",
				"m"
			},
			{
				"uint32",
				"velocityMode",
				"m"
			},
			{
				"float",
				"velocityNorth",
				"m/s"
			},
			{
				"float",
				"velocityEast",
				"m/s"
			},
			{
				"float",
				"velocityDown",
				"m/s"
			},
			{
				"float",
				"velocityRMS",
				"m/s"
			},
			{
				"float",
				"attitudeStatus",
				"m/s"
			},
			{
				"float",
				"roll",
				"m/s"
			},
			{
				"float",
				"pitch",
				"m/s"
			},
			{
				"float",
				"heading",
				"m/s"
			},
			{
				"float",
				"attitudeRMS",
				"m/s"
			}
		}
	}, {
		"sK",
		8,
		{
			{
				"double",
				"timeOfWeek",
				"msec"
			},
			{
				"uint8",
				"satelliteId",
				""
			},
			{
				"uint8",
				"systemId",
				""
			},
			{
				"uint8",
				"antennaId",
				""
			},
			{
				"uint8",
				"l1cn0",
				""
			},
			{
				"uint8",
				"l2cn0",
				""
			},

			{
				"float",
				"azimuth",
				""
			},
			{
				"float",
				"elevation",
				""
			}
		}
	}
};

